Contents: (Base HexCasting)

Basic Patterns
Number Literals
Mathematics
Constants
Stack Manipulation
Logical Operators
Entities
List Manipulation
Patterns as Iotas
Reading and Writing
Advanced Mathematics
Sets
Meta-evaluation

Addons
My Patterns

--Spell Circle Patterns--
--Akashic Patterns-- (Maybe?)

Spells

------------------------------------------------------------

Basic Patterns

	Compass' Purification II (entity → vector) REMOVED
		Removed due to 2D. Eye vs feet has no difference.

	Stadiometer's Prfn. (entity → num) REMOVED
		Height of entity seems irrelevant in 2D

	Pace Purification REMOVED
		I think the game won't have moving entities, so velocity is redundant.


Number Literals
	
	- None -

Mathematics

	Vector Exaltation -> Vector Distillation
	Vector Disintegration -> Vector Decomposition
		2D coords instead of 3D
	Division Distillation
		Vector2 on Vector2 returns Z of resulting vector assuming Z = 0 for input Vector"3"s

Constants

	Vector Reflections
		All now return 2 long vectors (2D)
		Pattern for y REMOVED (The straight one)
		Pattern for z now gives [0,1] (Effectively now y)

Stack Manipulation

	- None - (Swindler's Gambit sucks tho, hexbook has github code)

Logical Operators

	- None -

Entities

	Currently, types aren't a thing. Zone_Distillation and Entity_Purification exist just as that.

List Manipulation

	Derivation Distillation -> Derivation Decomposition
		I think this was a mistake on the original hexcasting docs. I plan to ask later.
		Decomposition is correct for 1 -> 2 iotas.

	Selection Exaltation
		Reversed upper and lower bounds gives [] not sublist.
		Matches Hex Studio, not base Hexcasting. [] gives more functionality though.

Escaping Patterns

	Hasty retrospection just returns a Bad Iota, not itself as a meta-pattern.

Reading and Writing

	Truenames aren't really a thing here. You can save any entity reference anywhere.
		- As this feature normally existed to prevent players abusing truenames, it isn't needed in this singleplayer game.
		- Entity references become invalid when said entity is dead. It persists on the stack, but spells don't affect them and reads return null.
	
	Changes to available patterns and shapes:
		- Auditor's and Accessor's REFLECTION removed, (The self one) as this is constant anyway.
		- Chronicler's Gambit + Purification are now one size smaller, and just have an 's' added to the code.
		- Auditor's and Accessor's PURIFICATION also smaller. They match respective Chronicler's, but append 'r' and 'l' respectively.
	These are to reduce time/size drawing these patterns, as they are used often in this game.

Advanced Mathematics

	- None -

Sets

	Outputs from set patterns are now sets. 
	- This differs from base hexcasting where a specific input with duplicates causes the output to also contain duplicates.

Meta-Evaluation

	Thoths no longer stops upon error-ing. Instead, it skips to the next iota in the list. (The current iota stops.)
	- The results list may contain multiple Bad_Iotas as a result. (On a crash)

	Iris's Gambit left out for now, as I don't think I properly understand it as of right now.
	Come back to it once I get a solid definition of "Jump" iota usage. (!!!)


------------------------------------------------------------

Addons

	Hexal Math (3)
		Factorial Purification
		Running Sum Purification
		Running Product Purification

		Mainly for the running sum as it makes getting a list 1-10 very easy.
		The others to form the full set really. Someone might use them.	

	-- Considering adding Particles (vec | [vec] →) from Hexal, purely for fun --
	-- Wisps? Long term goal? --


My Patterns
	Level access
	Added to enter and exit levels
		Enter takes the level_haver you want to enter
		Exit takes the caster as an entity (To prevent accidental leaving)

	Spellbook slot selection (4)
	Added to interact with spellbook (As it is permanently in "offhand")
		Verso's Gambit, Turn spellbook left
		Recto's Gambit, Turn spellbook right
		Tome's Reflection, See spellbook size (ret num)
		Tome's Gambit, Goto spellbook page (num)


------------------------------------------------------------

Spells
	- Many left out, as their use would just add bloat. Perhaps look into adding more later.
	- The following spells are implemented:

	Explosion (pos, size ->)
		- Size 1 is min, will kill pos and 8 neighbors. Explosion is always in square.
		- Idea is explosion isn't safe if friendlies nearby. Perhaps impulse into spikes instead.
	
	Impulse (ent, vect ->)
		- Destination snaps to nearest tile.
		- Now works like blink, but NOT through blocks (Inc glass)
			- Specifically, this acts like a tp.
			- Note, not the eye part. Can still impulse sideways.
		- Requires floating to impulse over spikes. Removes floating afterwards.
			- Additionally, ice physics if floating. Ignore vect magnitude and just keep going.
		- Can impulse through entities, but not land on entity.
		- If blocked by wall or at end by entity, find next closest tile on line.

	All Sentinel spells (Normal use)*
		- Sentinel is unselectable entity (Invisible to zone purifications etc, therefor also impulse etc.)
			- Additionally, it has no collision. No blocking movement or teleportation.
			- Effectively just a coordinate stored in Entity, displayed on map for player.
		- No great spell, as no ambit in this game.
		- Note: These spells do NOT affect level state, despite creating and moving entity
	
	Greater Teleport -> Teleport (ent, vect ->)
		- Requires line of sight to destination. Destination MUST be unobstructed teleport tile.
			- Can tp through glass and entities etc, just no walls.
		- vect is from entity. If not unobstructed tp tile, then spell fails.
		- Simpler pattern, no border. Just too relatively large otherwise.

	Blue Sun's Nadir (ent ->)
		- Currently only Nadir/Zenith
		- Reduce player friction and allow over spikes (Lose on exit spikes) and flight.
		- For others, allow survive impulse over spikes once (Can be over many spikes)
			- Lost after impulse
		- Applying to already floating entity will remove the effect.
		